/**
 * cascading style sheet
 * cascading [폭포처럼 흐르는 꼴]
 * inherit [상속]
 */

body {
  /* root */
}
/*
 * selector { }
 */

p {
  color: red;
}
/* type selector */
/* a = 0, b = 0, c = 1 */
/* 1 */

.hello {
  color: green;
}
/* class selector */
/* a = 0, b = 1, c = 0 */
/* 10 */

#hell {
  color: yellow;
}
/* id selector */
/* a = 1, b = 0, c = 0 */
/* 100 */

/* <p class="hello" id="hell">IE6 지옥</p>
/* a, b, c */

/* ID 셀렉터는 a + 1 */
/* class 셀렉터는 b + 1 */
/* type selector는 c + 1 */

div[lang] {

}
/* attribute selector, 속성 셀렉터 */
/* 특정한 속성을 가진 요소 */

div[lang="en"] {

}
/* attribute selector, 속성 셀렉터 */
/* 특정한 속성을 특정한 값으로 가진 요소 */

div[rel~="next"] {

}
/* attribute selector, 속성 셀렉터 */
/* 특정한 속성에 특정한 값을 갖고 있는데, 화이트스페이스로 띄워진 속성 값 중 하나가 특정한 값이면 됨 */
/* <div rel="next prev"></div> */
div[rel*="next"] {} /* 속성값 중 이 단어가 속하기만하면 OK / nextChciken */
div[rel^="next"] {} /* 속성값이 이 단어로 시작하면 OK / nextChicken */
div[rel$="next"] {} /* 속성값이 이 단어로 끝나면 OK / Chickenext */
div[rel|="next"] {} /* 속성값을 하이픈(-)으로 구분하는 리스트에서 단어로 시작하는 요소 / next-chicken */

p span {
  color: red;
}
/* descendant combinator, 자손 콤비네이터 */
/* A B 결합 */
/* A의 모든 자손요소 B */

p > span {

}
/* child combinator, 자식 콤비네이터 */
/* A B 결합 */
/* A의 모든 자식요소 B */

p + span {

}
/* adjacent sibling combinator, 인접 형제 콤비네이터 */
/* A B 결합 */
/* A와 바로 붙어있는 형제요소 B */
/* <p></p><span></span> */

p ~ span {

}
/* general sibling combinator, 일반 형제 콤비네이터 */
/* A B 결합 */
/* A의 뒤에오는 형제요소 B */
/* <p></p><span></span><a></a><span></span> */

/* 링크 의사 클래스 */
a:link { } /* 링크 */
a:visited { } /* 이미 방문한 링크 */

/* 유저 액션 의사 클래스 */
a:hover { } /* 마우스를 올렸을 때 */
a:active { } /* 마우스로 클릭했다가 떼기 전까지 */
a:focus { } /* 키보드의 포커스가 가있을 때  */

/* UI 요소 상태 의사 클래스 */
input:enabled {} /* input요소, input요소인데 disabled 속성이 없는 경우 */
input:disabled {}/* input요소, input요소인데 disabled 속성이 잇는 경우 */
input[type="checkbox"]:checked,
input[type="radio"]:checked {} /* radio 버튼이나 체크박스 버튼이 체크되어있는 상태 */

/* 구조 의사 클래스 */
li:first-child {} /* li요소인데 첫번째 자식인 경우 */
li:first-of-type {} /* li요소인데, li 요소의 그룹 중 첫번째 요소 */

li:last-child {} /* li요소인데 마지막 자식인 경우 */
li:last-of-type {} /* li요소인데, li 요소의 그룹 중 마지막 요소 */

li:nth-child(2) {} /* li요소인데 두번째 자식 */
li:nth-of-type(2) {} /* li요소인데, li 요소의 그룹 중 두번째 요소 */

li:nth-last-child(2) {} /* li요소인데 뒤에서부터 두번째 자식 */
li:nth-last-of-type(2) {} /* li요소인데, li 요소의 그룹 중 뒤에서부터 두번째 요소 */

li:nth-of-type(2n) {} /* li요소인데, li 요소의 그룹 중 2번째, 4번째... 짝수인 요소 */
li:nth-of-type(2n-1) {} /* li요소인데, li 요소의 그룹 중 1번째, 3번째... 홀수인 요소 */

li:nth-of-type(odd) {} /* 홀수 */
li:nth-of-type(even) {} /* 짝수 */

li:only-child {} /* 나 하나만 있을 때 */
li:only-of-type {} /* 나 하나만 있을 때 */

ul:empty {} /* ul요소가 비어있는 경우 */
/* <ul></ul> */

/* 의사 요소 */
p::first-line {} /* p요소의 첫번째 줄 */
p::first-letter {} /* p요소의 첫번째 단어 */
p::before {} /* p 요소의 여는태그 바로 뒤에, 의사 요소를 생성해서 집어넣음 */
p::after {} /* p 요소의 닫는태그 바로 앞에, 의사 요소를 생성해서 집어넣음 */
/*
 <p>
 ::first-line
   ::first-letter
     ::before
   ::first-letter
 ::first-line
 Hello world
 ::after
 </p>
*/

.btn {
  background: white;
  border-color:#333;
  color:#333;
  cursor:pointer;
}
.btn:hover {
  background: #333;
  color: #fff;
}
.btn:hover:active {
  color: #2ac1bc;
}
.btn:disabled,
.btn:disabled:hover,
.btn:disabled:focus,
.btn:disabled:hover:active {
  background:white;
  border-color:#eee;
  color:#eee;
  cursor:not-allowed;
}
/* button class="btn" disabled */

div {
  /* box-model */

  /* display */
  display: none;
  /**
   * 렌더링을 하지 않음
   * 없는 요소
   */
  display: block;
  /*
   * 자기가 가질 수 있는 영역 100%를 다 가지려고 함
   * width, height, padding, border, margin을 다 가질 수 있음
   */
  display: inline;
  /*
   * 텍스트(콘텐츠)의 길이만큼만 영역을 가짐
   * padding-left, padding-right, border, margin-left, margin-right만 선언 가능함
   * HTML 요소인데 display가 정의되지 않은 경우 Default는 inline
   */
  display: inline-block;
  /**
   * 텍스트(콘텐츠)의 길이만큼만 영역을 가짐 (inline의 성질)
   * width, height, padding, border, margin을 가질 수 있음 (block의 성질)
   */

   /* Flexbox */
   display: -webkit-box; /* android 2.x */
   display: -webkit-flex; /* android 2.3 이상, iOS 최신버전 */
   display: flex; /* android 5.0 이상 */
}
/*
html, body { display: block; }
address, blockquote, center, div, figure, figcaption, footer, form, header, hr,
legend, listing, main, p, plaintext, pre, xmp {
  display: block;
}
article, aside, h1, h2, h3, h4, h5, h6, hgroup, nav, section {
  display: block;
}
dir, dd, dl, dt, menu, ol, ul { display: block; }
display: flex, table, table-cell, list-item, ruby 같은 경우는 block과 형질이 동일하다
*/

div {
  /* font, text */
  font-size: 14px; /* 폰트 크기 */
  line-height: 1.2em; /* 행간 */
  letter-spacing: -0.1px; /* 자간 */
  font-family: "APPLE SD Gothic NEO", sans-serif; /* 폰트 패밀리 */
  font-weight: 300; /* 폰트 굵기 */
  font-style: italic; /* 기울임꼴, 오블맄, default */
  color:#333; /* 폰트 색상 */
  text-indent: 10px; /* 폰트 들여쓰기 */
  text-decoration: line-through;;
  /* 밑줄 : underline, 윗줄: overline, 중간줄:line-through, 없음 : none */
  text-align: left;
  /* 왼쪽 : left, 중간 : center, 오른쪽 : right, justify */
  text-shadow: #000 1px 1px 1px;
  /* 컬러, X축, Y축, 흐림 */
  /* shadow 계열을 모바일에서 이용하는 경우 렌더링이 느려지는 이슈 */
  white-space:wrap;
  /* 공백문자를 어떻게 처리할거냐, wrap: 줄바꿈, nowrap: 한줄로만 */
  text-overflow:ellipsis;
  /* 문자가 넘칠때 어떻게 처리할거냐, clip: 자름, ellipsis는 ...으로 대체 */
}

div {
  /* box-model */
  width: 100px; /* 가로길이 */
  height: 100px; /* 세로길이 */
  padding: 25px; /* 콘텐츠와 외곽선 사이간격 */
  border: 1px solid #000; /* 외곽선 */
  margin: 25px; /* 블록과 블록의 사이간격 */

  box-sizing: border-box;
  /* border-box : width와 height의 값을 최대값으로 두고,
  padding과 border가 그 안으로 속함 */
  /* padding-box :  width와 height의 값을 최대값으로 두고,
  padding만 그 안으로 속함 */

  overflow: hidden;
  /* overflow는 콘텐츠의 길이가 박스의 width나 height를 벗어났을 때, 어떻게 처리할 것인가 */
  /* hidden: 가림, auto: 길이가 충분할 때는 스크롤이 없다가 길이가 부족하면 스크롤 발생 */
  /* scroll: 콘텐츠 길이 상관없이 스크롤 발생 */

  width: 100%; /* width가 %거나 상대길이일 때 min이나 max를 작성해줌 */
  min-width: 100px; /* 최소 가로길이 */
  max-width: 200px; /* 최대 가로길이 */

  height: 100%; /* width가 %거나 상대길이일 때 min이나 max를 작성해줌 */
  min-height: 100px; /* 최소 가로길이 */
  max-height: 360px; /* 최대 가로길이 */

  /* 방탄웹 */
  /* height를 특정값으로 지정하지 않고, padding을 이용해서 콘텐츠의 길이에 맞게 박스가 조절되도록 */
}

/**
 * Positioning
 */
div {
  /*
   * coordinate system, 좌표 시스템
   * left, top, right, bottom, z-index
   * absolute의 기준점
   */
  position: relative;
  /*
   * static : 좌표시스템을 사용하지 않는 정적포지션 (기본값)
   * relative : 자기 자신에 상대적으로 좌표를 이동
   * absolute : 부모 중 좌표시스템을 사용하는 요소를 기준으로 이동
   * absolute된 요소는 다른 요소(자신의 자손 제외)에 영향을 주지 못해요.
   * fixed : 브라우저를 기준으로 좌표를 이동
   * fixed된 요소도 마찬가지로 다른 요소에 영향을 주지 못함
   * transform 속성을 가진 요소의 자식요소가 fixed position인 경우, 제대로 안됨
   */
  left: 0; /* X축의 Base */
  top: 0; /* Y축의 Base */
  right: 0; /* X축을 right부터 */
  bottom: 0; /* Y축을 bottom부터 */
}

div {
  /* color, background */
  background: #000; /* 해쉬코드 */
  background: lime; /* 키워드 */
  background: rgb(0,0,0); /* red, green, blue */
  background: hsl(130, 100%, 50%); /* 색상좌표, 채도, 명도 */
  background: rgba(0,0,0,0); /* red, green, blue */
  background: hsla(130, 100%, 50%, 0); /* 색상좌표, 채도, 명도 */
  background: currenColor; /* 현재 이 요소의 color 속성 값 */

  color: #000; /* color: inherit과 동일 */

  background-image:url();
  background-position: 0 0; /* left top */
  /* left, top, right, bottom, center, */
  background-size: cover;
  /* cover: 늘어뜨리기, contain: 박스의 영역에 맞게 이미지 축소 */
  background-color: #000;
  /* 배경 색상 */
  background-repeat:no-repeat;
  /* repeat, repeat-x, repeat-y, no-repeat */

  background:url() 0 0 no-repeat #000;
  /* animation : http://apes0113.postype.com/post/2445/
   * transition: http://apes0113.postype.com/post/2522/
   * timing function : http://apes0113.postype.com/post/2620/
   */
}
